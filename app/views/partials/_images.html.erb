
  <!-- The Load Image plugin is included for the preview images and image resizing functionality -->
  <script src="//blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"></script>
  <!-- The Canvas to Blob plugin is included for image resizing functionality -->
  <script src="//blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>

  <%= javascript_include_tag 'jquery.js', 'data-turbolinks-track' => false %>
  <%= javascript_include_tag 'jquery.ui.widget.js', 'data-turbolinks-track' => false %>
  <%= javascript_include_tag 'jquery.iframe-transport.js', 'data-turbolinks-track' => false %>
  <%= javascript_include_tag 'jquery.fileupload.js', 'data-turbolinks-track' => false %>
  <%= javascript_include_tag 'jquery.fileupload-process.js', 'data-turbolinks-track' => false %>
  <%= javascript_include_tag 'jquery.fileupload-image.js', 'data-turbolinks-track' => false %>
  <style>
    .fileinput-button input {
      cursor: pointer;
      direction: ltr;
      margin: 0;
      opacity: 0;
      position: relative;
      left: -10px;
      height: 40px;
      width: 200px;
      top: -25px;
    }
  </style>
<span class="btn btn-success fileinput-button" style="height:40px;width:200px">
        <i class="glyphicon glyphicon-plus"></i>
        <span><%= t(:add_files) %></span>
  <!-- The file input field used as target for the file upload widget -->
        <input id="fileupload" type="file" name="post_attachment[]" multiple>
    </span>
  <br>
  <br>
  <!-- The global progress bar -->
  <div id="progress" class="progress">
    <div class="progress-bar progress-bar-success"></div>
  </div>
  <!-- The container for the uploaded files -->
  <div id="files" class="files"></div>

  <script>
    /**
     * Created by telhar on 6/10/16.
     */
    function loadImages(posting_id){
      var retval = $.ajax({
        url: "/post/post_attachment/retrieveImages/"+posting_id,
        type: "GET",
        data: {
          id: posting_id
        }
      });
      return retval;
    }

    function callIt(id){
      if(!id){
        id=36;
        //console.log('no parameters');
        //return;
      }
      j=loadImages(id);
      j.success(function(data,status){
        if(data.status==='ok'){
          for(var i=0;i<data.results.length;i++){
            var imageData=data.results[i].imageData;
            console.log('id:'+data.results[i].id+ ' url:'+imageData.image.url+' description'+data.results[i].description);
          }
          redrawArray(data.results);

        }

      });
    }

    function redrawArray(images){
      $('.post_attachment_fields').each(function(){
        //this is a tested form so there is a hidden field to track the value
        $(this).next().remove();
        this.remove();
      })
      for(var i=0;i<images.length;i++){
        var imageData=images[i].imageData;
        var string = "<div class='post_attachment_fields'><div class='form-group col-sm-2'>";
        string += "<div style='height: 100px;width:100px;'>";
        string += "<img alt='Thumb' src='"+imageData.image.thumb.url+"' width='100' height='100'></div>";

        //add input
        if(images[i].description===null)
          images[i].description='';
        string+= "<div class='descriptions'>Title";
        string += "<input type='text' name='posting[post_attachments_attributes]["+i+"][description]' value='"+images[i].description+"'></div>";
        //add remove button
        string += "<a class='btn btn-danger' href='/post_attachments/"+images[i].id+"' data-method='DELETE' rel='nofollow'> <%= t(:delete)%></a>";
        string += "</div></div>";
        //nested form so this is needed
        string += '<input type="hidden" id="posting_post_attachments_attributes_'+i+'_id" name="posting[post_attachments_attributes]['+i+'][id]" value="'+images[i].id+'">'
        $('#posting_holder').append(string);
      }
    }
    /*jslint unparam: true, regexp: true */
    /*global window, $ */
    $(function () {
      'use strict';
      // Change this to the location of your server-side upload handler:
//#    var url = window.location.hostname === 'blueimp.github.io' ?
// #           '//jquery-file-upload.appspot.com/' : 'server/php/',
//      var url='//jquery-file-upload.appspot.com/';
      //var url='//www.afrikelist.com/posts/post_attachments';
    var url='//www.afrikelist.com/post/post_attachments/';
      var uploadButton = $('<button/>')
          .addClass('btn btn-primary')
          .prop('disabled', true)
          .text('Processing...')
          .on('click', function () {
            var $this = $(this),
                data = $this.data();
            $this
                .off('click')
                .text('Abort')
                .on('click', function () {
                  $this.remove();
                  data.abort();
                });
            data.submit().always(function () {
              $this.remove();
              console.log('sdata submit always');
            });
          });
      $('#fileupload').fileupload({
        formData: { id: <%= params[:id] %> },
        url: url,
        dataType: 'json',
        autoUpload: true,
        acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
        maxFileSize: 999000,
        // Enable image resizing, except for Android and Opera,
        // which actually support image resizing, but fail to
        // send Blob objects via XHR requests:
        disableImageResize: /Android(?!.*Chrome)|Opera/
            .test(window.navigator.userAgent),
        previewMaxWidth: 100,
        previewMaxHeight: 100,
        previewCrop: true,

        done: function(){
          callIt(<%= params[:id] %>);
        }
      }).on('fileuploadadd', function (e, data) {
        data.context = $('<div/>').appendTo('#files');
        $.each(data.files, function (index, file) {
          var node = $('<p/>')
              .append($('<span/>').text(file.name));
          if (!index) {
            node
                .append('<br>')
//                .append(uploadButton.clone(true).data(data));
          }
          node.appendTo(data.context);
        });
        console.log('fileuploadadd');
      }).on('fileuploadprocessalways', function (e, data) {
        var index = data.index,
            file = data.files[index],
            node = $(data.context.children()[index]);
        if (file.preview) {
          node
              .prepend('<br>')
              .prepend(file.preview);
        }
        if (file.error) {
          node
              .append('<br>')
              .append($('<span class="text-danger"/>').text(file.error));
        }
        if (index + 1 === data.files.length) {
          data.context.find('button')
              .text('Upload')
              .prop('disabled', !!data.files.error);
        }
      }).on('fileuploadprogressall', function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        $('#progress .progress-bar').css(
            'width',
            progress + '%'
        );
        console.log('fileupload process always');
      }).on('fileuploaddone', function (e, data) {
        $.each(data.result.files, function (index, file) {
          if (file.url) {
            var link = $('<a>')
                .attr('target', '_blank')
                .prop('href', file.url);
            $(data.context.children()[index])
                .wrap(link);
          } else if (file.error) {
            var error = $('<span class="text-danger"/>').text(file.error);
            $(data.context.children()[index])
                .append('<br>')
                .append(error);
          }
        });
        console.log('fileuplaod add one');
      }).on('fileuploadfail', function (e, data) {
        $.each(data.files, function (index) {
          var error = $('<span class="text-danger"/>').text('File upload failed.');
          $(data.context.children()[index])
              .append('<br>')
              .append(error);
        });
      }).prop('disabled', !$.support.fileInput)
          .parent().addClass($.support.fileInput ? undefined : 'disabled');
    });
  </script>

